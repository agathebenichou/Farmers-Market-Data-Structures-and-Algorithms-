#BlueJ class context
comment0.params=costPerDistanceUnit\ needContainer\ icc\ graphGenerator\ profitContainer\ warehouseContainer
comment0.target=FindShortestTour(double,\ NeedContainer,\ ItemCityCustomers,\ GraphGeneratorContainer,\ ProfitPerUnitContainer,\ LocationContainer)
comment0.text=\r\n\ The\ Class\ Constructor\ that\ takes\ in\ all\ the\ Containers\ it\ needs\ to\ run.\r\n
comment1.params=good\ profitContainer\ icc\ graphGenerator\ warehouseContainer
comment1.target=java.util.ArrayList\ shortestTourAlgorithm(java.lang.String,\ ProfitPerUnitContainer,\ ItemCityCustomers,\ GraphGeneratorContainer,\ LocationContainer)
comment1.text=\r\n\ The\ algorithm\ that\ calculates\ the\ shortest\ tour\ algorithm\ for\ a\ given\ need.\ \r\n\ \r\n\ Gets\ a\ location\ of\ the\ warehouse\ for\ the\ specified\ good.\ Gets\ the\ amount\ of\ cities\ that\ customers\ are\ in\ with\ the\ specified\ good.\r\n\ Finds\ the\ shortest\ path\ between\ the\ warehouse\ and\ the\ first\ city\ in\ the\ city\ container\ and\ stores\ that\ into\ a\ global\ arraylist.\r\n\ Gets\ the\ city\ going\ to\ and\ the\ city\ coming\ from\ and\ keeps\ placing\ that\ into\ the\ shortest\ path\ algorithm\ until\r\n\ there\ are\ no\ more\ cities\ left\ in\ the\ city\ list.\ Creates\ a\ local\ array\ list\ to\ store\ the\ shortest\ paths\ into.\r\n\ Calculates\ if\ it\ is\ worth\ going\ to\ a\ city\ using\ a\ profitCalculator\ method\ and\ if\ it\ is,\ calculate\ the\ shortest\ path\ between\ those\ nodes\r\n\ and\ stores\ that\ path\ into\ the\ local\ array\ list.\ Adds\ that\ local\ array\ list\ to\ the\ global\ one\ on\ every\ run.\ GEts\ the\ last\r\n\ city\ in\ the\ list\ and\ calculates\ the\ shortest\ path\ between\ the\ last\ city\ back\ to\ the\ warehouse.\ \r\n\ \r\n\ @param\ The\ String\ whose\ shortest\ path\ you\ want\ to\ find,\ the\ ProfitPerUnitContainer,\ the\ ItemCityCustomers\ container,\ the\ GraphGeneratorContainer,\ the\ \r\n\ LocationContainer\r\n\ @return\ The\ ArrayList\ that\ shows\ the\ shortest\ path\ from\ the\ warehouse\ to\ all\ the\ cities(nodes)\ with\ customers\ inside\ it\ with\ that\ need\ and\ back\ to\ the\ warehouse.\r\n
comment2.params=good\ shortestTour\ profitContainer\ icc\ graphGenerator
comment2.target=void\ results(java.lang.String,\ java.util.ArrayList,\ ProfitPerUnitContainer,\ ItemCityCustomers,\ GraphGeneratorContainer)
comment2.text=\r\n\ This\ method\ calculates\ the\ results\ for\ the\ vendor,\ how\ much\ they\ made\ and\ how\ much\ they\ lost\ on\ the\ path.\ IT\ depends\ greatly\ on\r\n\ the\ cost\ per\ distance\ unit.\r\n\ \r\n\ GEts\ the\ profit\ fot\ the\ good.\ For\ every\ customer\ in\ all\ the\ cities\ that\ have\ customers\ who\ have\ that\ good,\ add\ up\ all\ those\ customers.\r\n\ Calculate\ the\ total\ profit\ the\ vendor\ has\ made\ by\ multiplying\ the\ profit\ per\ unit\ with\ the\ number\ of\ customers\ te\ vendor\r\n\ delivered\ to.\r\n\ Calculates\ the\ cost\ of\ delivering\ to\ the\ city\ by\ getting\ the\ edge\ weights\ from\ all\ nodes\ in\ the\ shortest\ path\ and\r\n\ multiplying\ that\ by\ the\ cost\ per\ diatance\ unit.\r\n\ \r\n\ @param\ The\ string\ good\ whose\ shortest\ path\ you\ are\ calculating,\ the\ shortest\ tour\ found,\ the\ ProfitPErUnitCotnainer,\ the\ ItemCityCustomers\ class,\ the\ GraphGeneratorConainer\ class\r\n
comment3.params=good\ cityComingFrom\ cityGoingTo\ profitContainer\ icc\ graphGenerator
comment3.target=boolean\ profitCostCalculator(java.lang.String,\ int,\ int,\ ProfitPerUnitContainer,\ ItemCityCustomers,\ GraphGeneratorContainer)
comment3.text=\r\n\ This\ method\ calculates\ the\ cost\ of\ going\ to\ a\ city\ and\ compares\ that\ to\ the\ amount\ of\ money\ the\ vendor\ will\ make\r\n\ at\ that\ city\ and\ makes\ a\ decision\ of\ whether\ the\ vendor\ should\ tranverse\ there\ or\ not.\r\n\ \r\n\ For\ every\ customer\ in\ a\ city,\ if\ that\ customers\ list\ contains\ the\ good\ the\ vendor\ is\ calculating,\ increment\ counter.\r\n\ Calculates\ the\ profit,\ and\ the\ cost\ and\ compares\ the\ two.\r\n\ \r\n\ @param\ The\ String\ good,\ the\ city\ you\ are\ going\ to,\ the\ city\ you\ are\ coming\ from,\ the\ ProfitPerUnitContainer,\ the\ ItemCityCustomers\ container\ and\ the\ GraphGeneratorContainer\ \r\n\ @return\ True\ if\ the\ profit\ is\ greater\ than\ the\ cost\ and\ false\ if\ the\ profit\ is\ less\ than\ the\ cost.\r\n
numComments=4
