#BlueJ class context
comment0.params=
comment0.target=GenerateListOfNeeds()
comment1.params=
comment1.target=java.util.ArrayList\ GenerateNeeds()
comment1.text=\r\n\ This\ method\ generates\ a\ list\ of\ needs,\ in\ the\ form\ of\ an\ array\ list,\ for\ each\ customer.\r\n\ The\ generation\ depends\ on\ the\ mean\ and\ standard\ deviation\ of\ each\ need.\r\n\ Some\ needs,\ like\ vegetables,\ meat,\ and\ dairy,\ are\ more\ desired\ and\ will\ be\ in\ more\ lists.\r\n\ Other\ needs,\ like\ baked\ goods,\ fruit,\ meat\ and\ beverages,\ are\ less\ desired\ and\ will\ be\ in\ less\ lists.\r\n\ The\ list\ generated\ can\ have\ 0\ elements\ or\ can\ have\ 6\ elements,\ depending\ on\ the\ probability.\r\n\ \r\n\ The\ method\ creates\ an\ ArrayList\ that\ contains\ Objects.\ It\ goes\ through\ each\ stall\ type\ and\ generates\ a\ random\ number\ for\ each\ stall\ type\ depending\r\n\ on\ the\ mean\ and\ standard\ deviation\ numbers\ given\ in\ class.\ This\ generated\ random\ number\ must\ be\ between\ certain\ intervals,\ depending\ on\ the\ stall\ type\r\n\ in\ order\ for\ that\ stall\ type\ item\ to\ be\ added\ to\ the\ list\ of\ needs.\r\n\ \r\n\ The\ math\ works\ like\ so\:\ If\ the\ stall\ types\ have\ a\ high\ demand,\ like\ vegetables,\ meat\ and\ dairy,\ then\ the\ range\ of\ numbers\ within\ the\ if/else\ is\ greater\ than\ the\ range\r\n\ of\ numbers\ for\ stall\ types\ have\ less\ demand.\ I\ tested\ each\ individual\ if/else\ for\ each\ stall\ type\ so\ that\ out\ of\ 10\ times\ it\ was\ tested,\ a\ need\ was\ added\ to\ the\ \r\n\ Array\ List\ only\ 4/10\ times\ for\ baked\ goods\ because\ 37%\ of\ customers\ want\ a\ baked\ goods.\ I\ did\ the\ same\ with\ each\ other\ stall\ type.\r\n\ \r\n\ @return\ an\ ArrayList\ with\ Object\ elements\ that\ is\ the\ list\ of\ needs\ for\ one\ customer\r\n
numComments=2
